/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Table_18_7;

import com.entity.Student;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rin's
 */
public class MyTable extends javax.swing.JFrame {

    //custom table model
    class MyTableModal extends DefaultTableModel {

        @Override
        public boolean isCellEditable(int row, int column) {
            if (column == 2) {
                return true;
            }
            return false;
        }

        //how to display avalue ex: checkbox, number, label
        @Override
        public Class<?> getColumnClass(int columnIndex) {
            if (columnIndex == 2) {
                return Boolean.class;
            }if (columnIndex == 1) {
                return Long.class;
            }  else {
                return super.getColumnClass(columnIndex);
            }
        }

    }

    //data Source
    DefaultTableModel ds = null;
    List<Student> s = null;

    public MyTable() {
        initComponents();
        ds = new MyTableModal();
        s = new ArrayList<>();
        tblData.setModel(ds);
        
        setTitle("ABCxyz");

        //heading row
        ds.addColumn("Student ID");
        ds.addColumn("Student Name");
        ds.addColumn("Activated");

        //when user selected a row in table
        tblData.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                //get Selected row index
                if (e.getValueIsAdjusting()) {
                    int i = tblData.getSelectedRow();
                    int total = tblData.getRowCount();
                    //if selected index is valid
                    if (i >= 0 && i < total) {
                        String id = ds.getValueAt(i, 0).toString();
                        String name = ds.getValueAt(i, 1).toString();
                        String activated = ds.getValueAt(i, 2).toString();
                        txtID2.setText(id);
                        txtName2.setText(name);
                        boolean isChecked = activated.equalsIgnoreCase("true");
                        ckb2.setSelected(isChecked);
                    }
                }

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblActivated = new javax.swing.JLabel();
        rBtnYes = new javax.swing.JRadioButton();
        rBtnNo = new javax.swing.JRadioButton();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        lblID2 = new javax.swing.JLabel();
        txtID2 = new javax.swing.JTextField();
        lblName2 = new javax.swing.JLabel();
        txtName2 = new javax.swing.JTextField();
        lblActivated2 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        ckb2 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblID.setText("StudentID");

        lblName.setText("StudentName");

        lblActivated.setText("Activated");

        buttonGroup1.add(rBtnYes);
        rBtnYes.setText("Yes");

        buttonGroup1.add(rBtnNo);
        rBtnNo.setText("No");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblData);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblSearch.setText("Search by Name");

        lblID2.setText("Student ID");

        txtID2.setEditable(false);

        lblName2.setText("Student Name");

        lblActivated2.setText("Activated");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblID)
                                    .addComponent(lblName)
                                    .addComponent(lblActivated))
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rBtnYes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                        .addComponent(rBtnNo))
                                    .addComponent(txtID)
                                    .addComponent(txtName)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(btnSave))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblID2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(lblName2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearch)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblActivated2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ckb2)
                                .addGap(11, 11, 11)
                                .addComponent(btnUpdate)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActivated)
                    .addComponent(rBtnYes)
                    .addComponent(rBtnNo))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(lblSearch))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID2)
                    .addComponent(txtID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName2)
                    .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActivated2)
                    .addComponent(btnUpdate)
                    .addComponent(ckb2))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String id = txtID.getText();
        String name = txtName.getText();
        boolean activated = false;
        if (rBtnYes.isSelected()) {
            activated = true;
        }
        if (rBtnNo.isSelected() == false && rBtnYes.isSelected() == false) {
            JOptionPane.showMessageDialog(null, "Activated must be selected");
            return;
        }
        Student x = new Student(id, name, activated);
        if (s.isEmpty() || !isExisted(s, x)) {
            s.add(x);
            ds.addRow(x.toObject());
        } else JOptionPane.showMessageDialog(this, "ID existed", "Error Dialog", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_btnSaveActionPerformed

    private boolean isExisted(List<Student> a, Student s) {
        for (Student a1 : a) {
            if (a1.getId().equalsIgnoreCase(s.getId())) {
                return true;
            }
        }
        return false;
    }

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String name = txtSearch.getText();
        List<Student> l = new ArrayList<>();
        ds.setRowCount(0);
        for (Student student : s) {
            if (student.getName().contains(name)) {
                l.add(student);
                ds.addRow(student.toObject());
            }
        }
        if (l.isEmpty()) {
            for (Student student : s) {
                ds.addRow(student.toObject());
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
        String name = txtSearch.getText();
        List<Student> l = new ArrayList<>();
        ds.setRowCount(0);
        for (Student student : s) {
            if (student.getName().contains(name)) {
                l.add(student);
                ds.addRow(student.toObject());
            }
        }
        if (l.isEmpty()) {
            for (Student student : s) {
                ds.addRow(student.toObject());
            }
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
//        for (Student item : s) {
//            if (item.getId().equals(txtID2.getText())) {
//                item.setName(txtName2.getText());
//                item.setActivated(ckb2.isSelected());
//            }
//        }
//        ds.setRowCount(0);
//        for (Student student : s) {
//            ds.addRow(student.toObject());
//        }
        Student st = new Student(txtID2.getText(), txtName2.getText(), ckb2.isSelected());
        for (int i = 0; i < s.size(); i++) {
            if (s.get(i).equals(st)) {
                s.set(i,st);
                int k = tblData.getSelectedRow();
                ds.setValueAt(txtName2.getText(), k, 1);
                ds.setValueAt(ckb2.isSelected(), k, 2);
                break;
            }
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String name = txtSearch.getText();
        List<Student> l = new ArrayList<>();
        ds.setRowCount(0);
        for (Student student : s) {
            if (student.getName().contains(name)) {
                l.add(student);
                ds.addRow(student.toObject());
            }
        }
        if (l.isEmpty()) {
            for (Student student : s) {
                ds.addRow(student.toObject());
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox ckb2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblActivated;
    private javax.swing.JLabel lblActivated2;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblID2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JRadioButton rBtnNo;
    private javax.swing.JRadioButton rBtnYes;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtID2;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName2;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
